{"version":3,"sources":["Components/Todo/Todo.module.css","Pages/AllTodos/AllTodos.module.css","Pages/NotFoundPage/NotFoundPage.module.css","Pages/HomePage/HomePage.module.css","Pages/Completed/Completed.module.css","Pages/NotCompletedTodos/NotCompletedTodos.module.css","Redux/types/todo.ts","Components/Header/Header.tsx","Components/Navbar/Navbar.tsx","Pages/NotFoundPage/NotFoundPage.tsx","Components/HomeTextAnimation/HomeAnimation.tsx","Pages/HomePage/HomePage.tsx","Redux/actionCreators/todoActions.ts","Components/Todo/Todo.tsx","hooks/useTypedSelector.ts","Components/Chart/Chart.tsx","Pages/Completed/Completed.tsx","Components/Modal/Modal.tsx","hooks/useInput.ts","hooks/useValidation.ts","Pages/AllTodos/AllToodos.tsx","Pages/NotCompletedTodos/NotCompletedTodos.tsx","App.tsx","reportWebVitals.ts","Redux/reducers/todoReducer.ts","Redux/reducers/index.ts","Redux/index.ts","index.tsx","Components/Navbar/Navbar.module.css"],"names":["module","exports","TodoActionTypes","StyledHeader","styled","div","StyledTitle","h1","Header","Navbar","className","classes","Navbar__link","activeClassName","Navbar__linkActive","to","Navbar__textLink","NotFoundPage","NotFoundPage__title","NotFoundPage__subtitle","HomeAnimation","HomePage","style","display","flexDirection","todoCompleteToggle","id","type","TODO_COMPLETED_TOGGLE","payload","Todo","onClick","day","text","isCompleted","dispatch","desc","useDispatch","todoStyles","backgroundColor","color","Todo__checkbox","Todo__content","Todo__text","Todo__day","DELETE_TODO","deleteTodo","Todo__closeBtn","useTypedSelector","useSelector","StyledChartBar","ChartBar","props","labels","maxOfArr","Math","max","data","map","el","i","height","todoCount","label","FlexWrapper","StyledColumn","StyledSpan","span","ChartColumn","Completed","todos","state","todo","daysOfWeek","count","forEach","completed","push","filter","makeTodoCompleted","Chart","Modal","active","setActive","children","e","stopPropagation","useInput","initialValue","validations","useState","value","setValue","isDirty","setDirty","valid","isEmpty","setEmpty","minLengthError","setMinLengthError","isInputValid","setInputValid","useEffect","validation","length","useValidation","onChange","target","onBlur","console","log","clearValue","AllTodos","todoAnchorRef","useRef","todoText","minLength","AllTodos__inputLabel","htmlFor","AllTodos__textInput","AllTodos__addTodoBtn","disabled","ADD_TODO","addTodo","setTimeout","current","scrollIntoView","behavior","ref","AllTodos__modalBtn","NotCompletedTodos","App","path","exact","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","require","rootReducer","combineReducers","action","prevTodo","Date","getDay","dayEnglish","newTodo","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb2004d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__2gWNF\",\"Todo__content\":\"Todo_Todo__content__3w89J\",\"Todo__checkbox\":\"Todo_Todo__checkbox__1Nmii\",\"Todo__text\":\"Todo_Todo__text__ziYo1\",\"Todo__closeBtn\":\"Todo_Todo__closeBtn__11o61\",\"Todo__bottomBtn\":\"Todo_Todo__bottomBtn__29RyY\",\"Todo__day\":\"Todo_Todo__day__3EICn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllTodos\":\"AllTodos_AllTodos__5xek1\",\"AllTodos__modalBtn\":\"AllTodos_AllTodos__modalBtn__h3Ijd\",\"AllTodos__textInput\":\"AllTodos_AllTodos__textInput__1vcVU\",\"AllTodos__inputLabel\":\"AllTodos_AllTodos__inputLabel__7vOXx\",\"AllTodos__addTodoBtn\":\"AllTodos_AllTodos__addTodoBtn__3aQHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFoundPage\":\"NotFoundPage_NotFoundPage__3RazJ\",\"NotFoundPage__title\":\"NotFoundPage_NotFoundPage__title__1tXrR\",\"NotFoundPage__subtitle\":\"NotFoundPage_NotFoundPage__subtitle__WG3FG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePage\":\"HomePage_HomePage__mTqVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Completed\":\"Completed_Completed__3Vz-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotCompletedTodos\":\"NotCompletedTodos_NotCompletedTodos__3Rxpx\"};","export type TodoType = {\r\n    id: number,\r\n    text: string,\r\n    day: string,\r\n    completed: boolean,\r\n    desc?: string | undefined,\r\n}\r\n\r\nexport enum TodoActionTypes {\r\n    TODO_COMPLETED_TOGGLE = 'TODO_COMPLETED_TOGGLE',\r\n    DELETE_TODO = 'DELETE_TODO',\r\n    ADD_TODO = 'ADD_TODO',\r\n}\r\n\r\nexport interface TodoCompletedToggleType {\r\n    type: TodoActionTypes.TODO_COMPLETED_TOGGLE,\r\n    payload: number\r\n}\r\n\r\nexport interface AddTodoType {\r\n    type: TodoActionTypes.ADD_TODO,\r\n    payload: string,\r\n}\r\n\r\nexport interface DeleteTodoType {\r\n    type: TodoActionTypes.DELETE_TODO,\r\n    payload: number,\r\n}\r\n\r\nexport interface todoState {\r\n    todo: Array<TodoType>\r\n}\r\n\r\nexport type TodoActions = TodoCompletedToggleType | DeleteTodoType | AddTodoType\r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledHeader = styled.div`\r\n    background-color: #21212B;\r\n    height: 80px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\nconst StyledTitle = styled.h1`\r\n    margin-left: 50px;\r\n    font-size: 18px;\r\n    font-family: Roboto, sans-serif;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n`\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <StyledHeader>\r\n            <StyledTitle>JetBrains TodoList</StyledTitle>\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar: React.FC = () => {\r\n    return (\r\n        <div className={classes.Navbar}>\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                activeClassName={classes.Navbar__linkActive}\r\n                to={'/home'}\r\n            >\r\n                <span className=\"material-icons\">\r\n                home\r\n                </span>\r\n                <span className={classes.Navbar__textLink}>Home Page</span>\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                activeClassName={classes.Navbar__linkActive}\r\n                to={'/AllTodos'}\r\n            >\r\n                <span className=\"material-icons\">\r\n                    library_books\r\n                </span>\r\n                <span className={classes.Navbar__textLink}>All Todos</span>\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                activeClassName={classes.Navbar__linkActive}\r\n                to={'/NotCompletedTodos'}\r\n            >\r\n                <span className=\"material-icons\">\r\n                    not_interested\r\n                </span>\r\n\r\n                <span className={classes.Navbar__textLink}>Not completed</span>\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                className={classes.Navbar__link}\r\n                activeClassName={classes.Navbar__linkActive}\r\n                to={'/Completed'}\r\n            >\r\n                <span className=\"material-icons\">\r\n                    check_box\r\n                </span>\r\n                <span className={classes.Navbar__textLink}>Completed</span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport classes from './NotFoundPage.module.css'\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n    return (\r\n        <div className={classes.NotFoundPage}>\r\n            <h1 className={classes.NotFoundPage__title}>404</h1>\r\n            <span className={classes.NotFoundPage__subtitle}>not found</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage\r\n","import React from 'react'\r\nimport './style.scss'\r\n\r\nexport const HomeAnimation: React.FC = () => {\r\n    return (\r\n        <div className={'container'}>\r\n            <ul className=\"Words\">\r\n                <li className=\"Words-line\">\r\n                    <p>&nbsp;</p>\r\n                    <p>JetBrains</p>\r\n                </li>\r\n                <li className=\"Words-line\">\r\n                    <p>JetBrains</p>\r\n                    <p>InternShip</p>\r\n                </li>\r\n                <li className=\"Words-line\">\r\n                    <p>InternShip</p>\r\n                    <p>TodoList by</p>\r\n                </li>\r\n                {/*<li className=\"Words-line\">*/}\r\n                {/*    <p>TodoList</p>*/}\r\n                {/*    <p>by</p>*/}\r\n                {/*</li>*/}\r\n                <li className=\"Words-line\">\r\n                    <p>TodoList by</p>\r\n                    <p>Denis Bitaev</p>\r\n                </li>\r\n                <li className=\"Words-line\">\r\n                    <p>Denis Bitaev</p>\r\n                    <p>&nbsp;</p>\r\n                </li>\r\n                {/*<li className=\"Words-line\">*/}\r\n                {/*    <p>Bitaev</p>*/}\r\n                {/*    <p>&nbsp;</p>*/}\r\n                {/*</li>*/}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport classes from './HomePage.module.css'\r\nimport {HomeAnimation} from \"../../Components/HomeTextAnimation/HomeAnimation\";\r\n\r\nconst HomePage: React.FC = () => {\r\n    return (\r\n        <div className={classes.HomePage}>\r\n            <HomeAnimation />\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <h1>СДЕЛАТЬ СКРОЛИНГ ПРИ ДОБАЛЕНИИ ТУДУШКИ</h1>\r\n                <p>Сделать поддержку локалСторедж</p>\r\n                <p>github Pages</p>\r\n                <p>navbar открытие</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import {AddTodoType, DeleteTodoType, TodoActionTypes, TodoCompletedToggleType} from \"../types/todo\";\r\n\r\nexport const todoCompleteToggle = (id: number): TodoCompletedToggleType => {\r\n    return {\r\n        type: TodoActionTypes.TODO_COMPLETED_TOGGLE,\r\n        payload: id,\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id: number): DeleteTodoType => {\r\n    return {\r\n        type: TodoActionTypes.DELETE_TODO,\r\n        payload: id,\r\n    }\r\n}\r\n\r\nexport const addTodo = (todoText: string): AddTodoType=> {\r\n    return {\r\n        type: TodoActionTypes.ADD_TODO,\r\n        payload: todoText,\r\n    }\r\n}\r\n","import React from 'react'\r\nimport classes from './Todo.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteTodo} from \"../../Redux/actionCreators/todoActions\";\r\n\r\ntype PropsTypes = {\r\n    day: string,\r\n    text: string,\r\n    isCompleted: boolean,\r\n    desc: string | undefined,\r\n    id: number,\r\n    onClick: (todo: any) => void\r\n}\r\n\r\nconst Todo: React.FC<PropsTypes> = ({id,onClick,day, text,isCompleted,desc}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    let todoStyles = {\r\n        backgroundColor: '',\r\n        color: '',\r\n    }\r\n    if (isCompleted) {\r\n        todoStyles.backgroundColor = '#FFBCBC'\r\n        todoStyles.color = '#2F2C39'\r\n    } else {\r\n        todoStyles.backgroundColor = '#21212B'\r\n    }\r\n\r\n    const deleteTodoHandler = () => {\r\n        dispatch(deleteTodo(id))\r\n    }\r\n\r\n    return (\r\n        <div style={todoStyles} className={classes.Todo}>\r\n            <div className={classes.Todo__checkbox} onClick={onClick}>\r\n                {\r\n                    isCompleted\r\n                        ? <span className=\"material-icons\">\r\n                            expand_more\r\n                        </span>\r\n                        : null\r\n                }\r\n            </div>\r\n            <div className={classes.Todo__content}>\r\n                <p className={classes.Todo__text}>{text}</p>\r\n                <span className={classes.Todo__day}>{day}</span>\r\n            </div>\r\n            <span onClick={deleteTodoHandler} className={classes.Todo__closeBtn + \" material-icons\"}>\r\n                close\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../Redux/reducers\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import React from \"react\";\r\nimport styled from 'styled-components'\r\n\r\nconst StyledChartBar = styled.div`\r\n    margin: 40px auto;\r\n    width: 700px;\r\n    height: 400px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n`\r\n\r\n\r\nconst ChartBar: React.FC<any> = (props: any) => {\r\n    const labels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n    const maxOfArr = Math.max(...props.data)\r\n\r\n    return (\r\n        <StyledChartBar>\r\n            {props.data.map((el: any, i: number) => {\r\n                const height = ((el / maxOfArr) * 100) || 0\r\n                return <ChartColumn\r\n                    todoCount={el}\r\n                    label={labels[i]}\r\n                    key={i}\r\n                    height={height}\r\n                />\r\n            })}\r\n        </StyledChartBar>\r\n    )\r\n}\r\nexport default ChartBar\r\n\r\nconst FlexWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    height:100%;\r\n    align-items: center;\r\n`\r\n\r\nconst StyledColumn = styled.div`\r\n    transition: 1s;\r\n    width: 60px;\r\n    background-color: #21212B;\r\n    height: ${(props: any) => props.height}%;\r\n    &:hover {\r\n        background-color: rgb(255, 188, 188);\r\n    }\r\n`\r\nconst StyledSpan = styled.span`\r\n    opacity: ${(props:any) => props.height === 0 ? 0 : 1}\r\n`\r\nconst ChartColumn:React.FC<any> = (props: any) => {\r\n    return (\r\n        <FlexWrapper>\r\n            <StyledSpan {...props}>{props.label + ' ' + props.todoCount}</StyledSpan>\r\n            <StyledColumn {...props}></StyledColumn>\r\n        </FlexWrapper>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport classes from './Completed.module.css'\r\nimport Todo from \"../../Components/Todo/Todo\";\r\nimport {todoCompleteToggle} from \"../../Redux/actionCreators/todoActions\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ChartBar from '../../Components/Chart/Chart';\r\n\r\nconst Completed = () => {\r\n    const todos = useTypedSelector(state=> state.todo.todo)\r\n    const dispatch = useDispatch()\r\n\r\n    const makeTodoCompleted = (todo: any) => {\r\n        dispatch(todoCompleteToggle(todo.id))\r\n    }\r\n    const daysOfWeek = [\r\n        { day: \"Monday\", count: 0},\r\n        { day: \"Tuesday\", count: 0},\r\n        { day: \"Wednesday\", count: 0},\r\n        { day: \"Thursday\", count: 0},\r\n        { day: \"Friday\", count: 0},\r\n        { day: \"Saturday\", count: 0},\r\n        { day: \"Sunday\", count: 0},\r\n    ]\r\n    const data = []\r\n\r\n    todos.forEach((el,i) => {\r\n        for (let i in daysOfWeek) {\r\n            if (daysOfWeek[i].day === el.day && el.completed === true) {\r\n                daysOfWeek[i].count += 1\r\n            }\r\n        }\r\n    })\r\n\r\n    for (let i in daysOfWeek) {\r\n        data.push(daysOfWeek[i].count)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Completed}>\r\n            {\r\n                todos.filter(el=> el.completed === true).map((todo) => {\r\n                    return <Todo\r\n                        onClick={() => makeTodoCompleted(todo)}\r\n                        text={todo.text}\r\n                        day={todo.day}\r\n                        key={todo.id}\r\n                        desc={todo.desc}\r\n                        id={todo.id}\r\n                        isCompleted={todo.completed}\r\n                    />\r\n                })\r\n            }\r\n            <ChartBar data={data}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Completed\r\n","import React from 'react'\r\nimport './Modal.css'\r\n\r\ntype PropsType = {\r\n    active: boolean,\r\n    setActive: (bol: boolean) => void,\r\n}\r\n\r\nconst Modal: React.FC<PropsType> = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={active ? 'Modal active' : 'Modal'} onClick={() => setActive(false)}>\r\n            <div className={active ? 'Modal__content active' : 'Modal__content'} onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import {ChangeEvent, useState} from \"react\";\r\nimport {useValidation} from \"./useValidation\";\r\n\r\nexport const useInput = (initialValue: any, validations: any) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const [isDirty, setDirty] = useState(false)\r\n    const valid = useValidation(value, validations)\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value)\r\n        setDirty(true)\r\n    }\r\n\r\n\r\n\r\n    const clearValue = () => {\r\n        setValue('')\r\n        setDirty(false)\r\n    }\r\n\r\n    const onBlur = (e: any) => {\r\n        // setDirty(true)\r\n        console.log('asd')\r\n    }\r\n\r\n    return {\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        isDirty,\r\n        ...valid,\r\n        clearValue,\r\n    }\r\n}\r\n","import {useEffect, useState} from \"react\";\r\n\r\nexport const useValidation = (value: any, validations: any) => {\r\n    const [isEmpty, setEmpty] = useState(true)\r\n    const [minLengthError, setMinLengthError] = useState(false)\r\n    const [isInputValid, setInputValid] = useState(false)\r\n\r\n    useEffect( ()=> {\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLength':\r\n                    value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\r\n                    break\r\n                case 'isEmpty':\r\n                    value ? setEmpty(false) : setEmpty(true)\r\n                    break\r\n\r\n            }\r\n        }\r\n    }, [value, validations])\r\n\r\n    useEffect( ()=> {\r\n        if (isEmpty || minLengthError) {\r\n            setInputValid(false)\r\n        } else {\r\n            setInputValid(true)\r\n        }\r\n    }, [isEmpty, minLengthError])\r\n\r\n    return {\r\n        isEmpty,\r\n        minLengthError,\r\n        isInputValid\r\n    }\r\n}\r\n","import React, {useRef, useState} from 'react'\r\nimport classes from './AllTodos.module.css'\r\nimport Todo from \"../../Components/Todo/Todo\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addTodo, todoCompleteToggle} from \"../../Redux/actionCreators/todoActions\";\r\nimport Modal from \"../../Components/Modal/Modal\";\r\nimport {useInput} from \"../../hooks/useInput\";\r\n\r\nconst AllTodos: React.FC = () => {\r\n    const todoAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [active, setActive] = useState(false)\r\n    const todos = useTypedSelector( state => state.todo.todo)\r\n    const dispatch = useDispatch()\r\n    const todoText = useInput('', {isEmpty: true, minLength: 5})\r\n\r\n    const makeTodoCompleted = (todo: any) => {\r\n        dispatch(todoCompleteToggle(todo.id))\r\n    }\r\n\r\n    const addTodoHandler = () => {\r\n        dispatch(addTodo(todoText.value))\r\n        setActive(false)\r\n        todoText.clearValue()\r\n        setTimeout(()=> {\r\n            todoAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\r\n        }, 200)\r\n    }\r\n    return (\r\n        <div className={classes.AllTodos}>\r\n            <Modal active={active} setActive={setActive}>\r\n                <label className={classes.AllTodos__inputLabel} htmlFor=\"todotext\">Todo text</label>\r\n                {(todoText.isDirty && todoText.isEmpty) && <div style={{color: 'red'}}>Напишите что-нибудь</div>}\r\n                {(todoText.isDirty && todoText.minLengthError) && <div style={{color: 'red'}}>Минимальная длина - 5</div>}\r\n                <input\r\n                    id=\"todotext\"\r\n                    type=\"text\"\r\n                    value={todoText.value}\r\n                    onChange={e => todoText.onChange(e)}\r\n                    onBlur={e => todoText.onBlur(e)}\r\n                    className={classes.AllTodos__textInput}\r\n                />\r\n                <button\r\n                    className={classes.AllTodos__addTodoBtn}\r\n                    disabled={!todoText.isInputValid}\r\n                    onClick={addTodoHandler}\r\n                >\r\n                    add\r\n                </button>\r\n            </Modal>\r\n\r\n            {\r\n                todos.map((todo) => {\r\n                    return <Todo\r\n                        onClick={() => makeTodoCompleted(todo)}\r\n                        text={todo.text}\r\n                        day={todo.day}\r\n                        key={todo.id}\r\n                        desc={todo.desc}\r\n                        id={todo.id}\r\n                        isCompleted={todo.completed}\r\n                    />\r\n                })\r\n            }\r\n            <div ref={todoAnchorRef}></div>\r\n            <button className={classes.AllTodos__modalBtn} onClick={()=> setActive(true)}>\r\n                <span className=\"material-icons\">\r\n                    add_circle_outline\r\n                </span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllTodos\r\n","import React from 'react'\r\nimport classes from './NotCompletedTodos.module.css'\r\nimport Todo from \"../../Components/Todo/Todo\";\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {todoCompleteToggle} from \"../../Redux/actionCreators/todoActions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst NotCompletedTodos = () => {\r\n    const todos = useTypedSelector(state=> state.todo.todo)\r\n    const dispatch = useDispatch()\r\n\r\n    const makeTodoCompleted = (todo: any) => {\r\n        dispatch(todoCompleteToggle(todo.id))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.NotCompletedTodos}>\r\n\r\n            {\r\n                todos.filter(el=> el.completed !== true).map((todo) => {\r\n                    return <Todo\r\n                        onClick={() => makeTodoCompleted(todo)}\r\n                        text={todo.text}\r\n                        day={todo.day}\r\n                        key={todo.id}\r\n                        desc={todo.desc}\r\n                        id={todo.id}\r\n                        isCompleted={todo.completed}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotCompletedTodos\r\n","import React from 'react';\nimport {Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport NotFoundPage from \"./Pages/NotFoundPage/NotFoundPage\";\nimport HomePage from \"./Pages/HomePage/HomePage\";\nimport Completed from \"./Pages/Completed/Completed\";\nimport AllTodos from \"./Pages/AllTodos/AllToodos\";\nimport NotCompletedTodos from \"./Pages/NotCompletedTodos/NotCompletedTodos\";\n\nfunction App() {\n  return (\n    <div>\n        <Header />\n        <div className={'content'} style={{display: 'flex'}}>\n            <Navbar />\n            <Switch>\n                <Route path={'/AllTodos'} exact component={AllTodos}/>\n                <Route path={'/NotCompletedTodos'} exact component={NotCompletedTodos}/>\n                <Route path={'/Completed'} exact component={Completed}/>\n                <Route path={'/home'} exact component={HomePage}/>\n                <Redirect from='/' to='/home'/>\n                <Route path={'*'} exact component={NotFoundPage}/>\n            </Switch>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {TodoActions, TodoActionTypes, todoState} from \"../types/todo\";\r\nconst data = require('../../data.json')\r\n\r\nconst initialState: todoState = {\r\n    todo: data.todos || []\r\n}\r\n\r\nexport const todoReducer = (state = initialState, action: TodoActions): todoState => {\r\n    switch (action.type) {\r\n        case TodoActionTypes.TODO_COMPLETED_TOGGLE:\r\n            const prevTodo = state.todo.map( el => {\r\n                if (el.id === action.payload) {\r\n                    el.completed = !el.completed\r\n                }\r\n                return el\r\n            })\r\n            return {\r\n                ...state, todo: prevTodo\r\n            }\r\n        case TodoActionTypes.DELETE_TODO:\r\n            return {\r\n                ...state, todo: state.todo.filter(todo => todo.id !== action.payload)\r\n            }\r\n        case TodoActionTypes.ADD_TODO:\r\n            const day = new Date().getDay()\r\n            const dayEnglish = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n            const newTodo = {\r\n                id: state.todo.length + 1,\r\n                text: action.payload,\r\n                day: dayEnglish[day],\r\n                completed: false\r\n            }\r\n            const todos = state.todo\r\n            todos.push(newTodo)\r\n            return {\r\n                ...state, todo: todos\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {todoReducer} from \"./todoReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    todo: todoReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof  rootReducer>\r\n","import {createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers\";\r\n\r\nexport const store = createStore(rootReducer)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__11hQX\",\"Navbar__link\":\"Navbar_Navbar__link__LNuc_\",\"Navbar__textLink\":\"Navbar_Navbar__textLink__3fh6c\",\"Navbar__linkActive\":\"Navbar_Navbar__linkActive__1L-k7\"};"],"sourceRoot":""}